/* tslint:disable */
/* eslint-disable */
/**
 * JSON Resume
 * Standarized resumes
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SchemaField,
    SchemaFieldFromJSON,
    SchemaFieldFromJSONTyped,
    SchemaFieldToJSON,
} from './SchemaField';

/**
 * 
 * @export
 * @interface OutputType
 */
export interface OutputType {
    /**
     * 
     * @type {string}
     * @memberof OutputType
     */
    name: string;
    /**
     * 
     * @type {Array<SchemaField>}
     * @memberof OutputType
     */
    fields: Array<SchemaField>;
    /**
     * 
     * @type {{ [key: string]: SchemaField; }}
     * @memberof OutputType
     */
    fieldMap: { [key: string]: SchemaField; };
}

export function OutputTypeFromJSON(json: any): OutputType {
    return OutputTypeFromJSONTyped(json, false);
}

export function OutputTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutputType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'fields': ((json['fields'] as Array<any>).map(SchemaFieldFromJSON)),
        'fieldMap': (mapValues(json['fieldMap'], SchemaFieldFromJSON)),
    };
}

export function OutputTypeToJSON(value?: OutputType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'fields': ((value.fields as Array<any>).map(SchemaFieldToJSON)),
        'fieldMap': (mapValues(value.fieldMap, SchemaFieldToJSON)),
    };
}

