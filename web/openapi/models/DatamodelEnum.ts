/* tslint:disable */
/* eslint-disable */
/**
 * JSON Resume
 * Standarized resumes
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnumValue,
    EnumValueFromJSON,
    EnumValueFromJSONTyped,
    EnumValueToJSON,
} from './EnumValue';

/**
 * 
 * @export
 * @interface DatamodelEnum
 */
export interface DatamodelEnum {
    /**
     * 
     * @type {string}
     * @memberof DatamodelEnum
     */
    name: string;
    /**
     * 
     * @type {Array<EnumValue>}
     * @memberof DatamodelEnum
     */
    values: Array<EnumValue>;
    /**
     * 
     * @type {string}
     * @memberof DatamodelEnum
     */
    dbName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DatamodelEnum
     */
    documentation?: string;
}

export function DatamodelEnumFromJSON(json: any): DatamodelEnum {
    return DatamodelEnumFromJSONTyped(json, false);
}

export function DatamodelEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatamodelEnum {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'values': ((json['values'] as Array<any>).map(EnumValueFromJSON)),
        'dbName': !exists(json, 'dbName') ? undefined : json['dbName'],
        'documentation': !exists(json, 'documentation') ? undefined : json['documentation'],
    };
}

export function DatamodelEnumToJSON(value?: DatamodelEnum | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'values': ((value.values as Array<any>).map(EnumValueToJSON)),
        'dbName': value.dbName,
        'documentation': value.documentation,
    };
}

