/* tslint:disable */
/* eslint-disable */
/**
 * JSON Resume
 * Standarized resumes
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Basic
 */
export interface Basic {
    /**
     * 
     * @type {number}
     * @memberof Basic
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    image: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof Basic
     */
    summary: string;
    /**
     * 
     * @type {number}
     * @memberof Basic
     */
    userId: number | null;
    /**
     * 
     * @type {User}
     * @memberof Basic
     */
    user?: User | null;
}

export function BasicFromJSON(json: any): Basic {
    return BasicFromJSONTyped(json, false);
}

export function BasicFromJSONTyped(json: any, ignoreDiscriminator: boolean): Basic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'email': json['email'],
        'label': json['label'],
        'image': json['image'],
        'phone': json['phone'],
        'summary': json['summary'],
        'userId': json['userId'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function BasicToJSON(value?: Basic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'email': value.email,
        'label': value.label,
        'image': value.image,
        'phone': value.phone,
        'summary': value.summary,
        'userId': value.userId,
        'user': UserToJSON(value.user),
    };
}

