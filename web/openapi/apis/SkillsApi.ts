/* tslint:disable */
/* eslint-disable */
/**
 * JSON Resume
 * Standarized resumes
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    SkillsCreateDto,
    SkillsCreateDtoFromJSON,
    SkillsCreateDtoToJSON,
    SkillsUpdateDto,
    SkillsUpdateDtoFromJSON,
    SkillsUpdateDtoToJSON,
} from '../models';

export interface SkillsEntityControllerCreateRequest {
    skillsCreateDto: SkillsCreateDto;
}

export interface SkillsEntityControllerDeleteRequest {
    id: string;
}

export interface SkillsEntityControllerFindOneRequest {
    id: string;
}

export interface SkillsEntityControllerUpdateRequest {
    id: string;
    skillsUpdateDto: SkillsUpdateDto;
}

/**
 * 
 */
export class SkillsApi extends runtime.BaseAPI {

    /**
     */
    async skillsEntityControllerCreateRaw(requestParameters: SkillsEntityControllerCreateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.skillsCreateDto === null || requestParameters.skillsCreateDto === undefined) {
            throw new runtime.RequiredError('skillsCreateDto','Required parameter requestParameters.skillsCreateDto was null or undefined when calling skillsEntityControllerCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/skills`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SkillsCreateDtoToJSON(requestParameters.skillsCreateDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async skillsEntityControllerCreate(requestParameters: SkillsEntityControllerCreateRequest, initOverrides?: RequestInit): Promise<void> {
        await this.skillsEntityControllerCreateRaw(requestParameters, initOverrides);
    }

    /**
     */
    async skillsEntityControllerDeleteRaw(requestParameters: SkillsEntityControllerDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling skillsEntityControllerDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skills/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async skillsEntityControllerDelete(requestParameters: SkillsEntityControllerDeleteRequest, initOverrides?: RequestInit): Promise<void> {
        await this.skillsEntityControllerDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async skillsEntityControllerFindManyRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skills`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async skillsEntityControllerFindMany(initOverrides?: RequestInit): Promise<void> {
        await this.skillsEntityControllerFindManyRaw(initOverrides);
    }

    /**
     */
    async skillsEntityControllerFindOneRaw(requestParameters: SkillsEntityControllerFindOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling skillsEntityControllerFindOne.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skills/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async skillsEntityControllerFindOne(requestParameters: SkillsEntityControllerFindOneRequest, initOverrides?: RequestInit): Promise<void> {
        await this.skillsEntityControllerFindOneRaw(requestParameters, initOverrides);
    }

    /**
     */
    async skillsEntityControllerUpdateRaw(requestParameters: SkillsEntityControllerUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling skillsEntityControllerUpdate.');
        }

        if (requestParameters.skillsUpdateDto === null || requestParameters.skillsUpdateDto === undefined) {
            throw new runtime.RequiredError('skillsUpdateDto','Required parameter requestParameters.skillsUpdateDto was null or undefined when calling skillsEntityControllerUpdate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/skills/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: SkillsUpdateDtoToJSON(requestParameters.skillsUpdateDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async skillsEntityControllerUpdate(requestParameters: SkillsEntityControllerUpdateRequest, initOverrides?: RequestInit): Promise<void> {
        await this.skillsEntityControllerUpdateRaw(requestParameters, initOverrides);
    }

}
